@page "/app/dashboard"
@using BlazorUrl.Client.Dtos
@using BlazorUrl.Client.Extensions
@using BlazorUrl.Client.Interfaces
@using BlazorUrl.Client.SharedComponents
@using Microsoft.AspNetCore.Components.Sections

@rendermode @(new InteractiveAutoRenderMode(false))



@inject ILinkService linkService
@inject NavigationManager _navigationManager


<PageTitle>Dashboard</PageTitle>


<SectionContent SectionName="client-heading">
    <h1 class="text-main fw-bold text-center">My Links</h1>
</SectionContent>


@if (_isLoading)
{
    <Loader />
}
else
{
    <div class="row">
        <div class="col-sm-4">
            <div class="box bg-main text-white shadow-lg cursor-pointer" @onclick="GotoMyLinksPage">
                <h3>Total Links</h3>
                <h2>@_dashboardDataDto.TotalLinks</h2>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="box bg-main text-white shadow-lg">
                <h3>Total Clicks</h3>
                <h2>@_dashboardDataDto.TotalClicks</h2>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="box bg-main text-white shadow-lg cursor-pointer" @onclick="GotoMyLinksPage">
                <h3>Active Links</h3>
                <h2>@_dashboardDataDto.TotalActiveLinks</h2>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="box bg-main text-white shadow-lg">
                <h3>Inactive Links</h3>
                <h2>@_dashboardDataDto.TotalInactiveLinks</h2>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="box bg-main text-white shadow-lg">
                <h3>Today`s Links</h3>
                <h2>@_dashboardDataDto.TotalLinkCreatedToday</h2>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="box bg-main text-white shadow-lg">
                <h3>Today Clicks</h3>
                <h2>@_dashboardDataDto.TotalClicksToday</h2>
            </div>
        </div>
    </div>
}

@code {

    [CascadingParameter]
    public Task<AuthenticationState> AuthStateTask { get; set; }

    private DashboardDataDto _dashboardDataDto;
    private bool _isLoading;

    protected override async Task OnInitializedAsync()
    {
        _isLoading = true;
        var authState = await AuthStateTask;
        var userId = authState.User.GetUserId();

        _dashboardDataDto = await linkService.GetDashboardDataAsync(userId);

        _isLoading = false;
    }

    private async Task GotoMyLinksPage()
    {
        _navigationManager.NavigateTo("/app/my-links");
    }

}
